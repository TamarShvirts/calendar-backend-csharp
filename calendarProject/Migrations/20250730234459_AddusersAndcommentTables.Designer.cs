// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using calendarProject.Models;

#nullable disable

namespace calendarProject.Migrations
{
    [DbContext(typeof(connectionDB))]
    [Migration("20250730234459_AddusersAndcommentTables")]
    partial class AddusersAndcommentTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("calendarProject.Models.comment", b =>
                {
                    b.Property<int>("commentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("commentId"), 1L, 1);

                    b.Property<DateTime>("commentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateByCalendar")
                        .HasColumnType("datetime2");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("commentId");

                    b.ToTable("comment");
                });

            modelBuilder.Entity("calendarProject.Models.document", b =>
                {
                    b.Property<int>("docId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("docId"), 1L, 1);

                    b.Property<bool>("docConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("docDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("docEdit")
                        .HasColumnType("bit");

                    b.Property<string>("docName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("docId");

                    b.ToTable("document");
                });

            modelBuilder.Entity("calendarProject.Models.subjectWeek", b =>
                {
                    b.Property<int>("subId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("subId"), 1L, 1);

                    b.Property<DateTime>("lastDateWeek")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("stratDateWeek")
                        .HasColumnType("datetime2");

                    b.Property<string>("subName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("subId");

                    b.ToTable("subjectWeek");
                });

            modelBuilder.Entity("calendarProject.Models.users", b =>
                {
                    b.Property<int>("userNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userNameId"), 1L, 1);

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userNameId");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
